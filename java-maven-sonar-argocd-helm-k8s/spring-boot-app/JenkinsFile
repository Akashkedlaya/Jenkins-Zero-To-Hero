pipeline {
  agent {
    docker {
      image 'akashbmk/maven-docker:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/akashkedlaya/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://50.19.177.141:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "akashbmk/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "akashkedlaya"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    # Create a temporary directory for git operations
                    TEMP_DIR="/tmp/git-update-${BUILD_NUMBER}"
                    rm -rf $TEMP_DIR
                    mkdir -p $TEMP_DIR
                    cd $TEMP_DIR
                    
                    echo "Cloning repository to: $TEMP_DIR"
                    git clone https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git .
                    
                    # Configure git user
                    git config user.email "akashkedlaya8888@gmail.com"
                    git config user.name "Akashkedlaya"
                    
                    BUILD_NUMBER=${BUILD_NUMBER}
                    DEPLOYMENT_FILE="java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
                    
                    echo "Looking for deployment file: $DEPLOYMENT_FILE"
                    if [ ! -f "$DEPLOYMENT_FILE" ]; then
                        echo "Deployment file not found. Searching for YAML files:"
                        find . -name "*.yml" -o -name "*.yaml" | head -10
                        exit 1
                    fi
                    
                    echo "Current deployment file content:"
                    cat $DEPLOYMENT_FILE
                    
                    # Check if replaceImageTag exists
                    if ! grep -q "replaceImageTag" $DEPLOYMENT_FILE; then
                        echo "ERROR: 'replaceImageTag' placeholder not found in deployment file"
                        echo "Please ensure your deployment.yml contains 'replaceImageTag' as a placeholder"
                        exit 1
                    fi
                    
                    # Update deployment file
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" $DEPLOYMENT_FILE
                    
                    echo "Updated deployment file:"
                    cat $DEPLOYMENT_FILE
                    
                    # Commit and push
                    git add $DEPLOYMENT_FILE
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push origin main
                    
                    echo "Successfully updated deployment file"
                    
                    # Cleanup
                    cd ${WORKSPACE}
                    rm -rf $TEMP_DIR
                '''
            }
        }
    }
  }
}
